name: CI/CD Pipeline

on:
  workflow_dispatch:
    

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV

    - name: Install Dependencies
      working-directory: github-actions-cicd-demo
      run: |
        python -m pip install --upgrade pip
        pip install -r app/requirements.txt

    - name: Run Tests
      working-directory: github-actions-cicd-demo
      run: |
        pytest tests/

    - name: Build Docker Image
      run: |
        docker build -t my-app -f github-actions-cicd-demo/Dockerfile github-actions-cicd-demo

    - name: Push Docker Image to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Tag and Push
      run: |
        docker tag my-app:latest ${{ secrets.DOCKER_USERNAME}}/my-app:latest
        docker push ${{ secrets.DOCKER_USERNAME}}/my-app:latest

    - name: Deploy to AWS EC2
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # Install Docker if not present
          if ! command -v docker &> /dev/null; then
            sudo yum update -y
            sudo amazon-linux-extras install docker -y
            sudo service docker start
            sudo usermod -aG docker ec2-user
          fi

          # Deploy container
          docker pull ${{ secrets.DOCKER_USERNAME }}/my-app:latest
          docker stop my-app || true
          docker rm my-app || true
          docker run -d --name my-app -p 80:5000 ${{ secrets.DOCKER_USERNAME }}/my-app:latest

    - name: Slack Notification via Webhook
      uses: Ilshidur/action-slack@v3
      with:
        webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
        msg: 'âœ… Deployment Successful!'

